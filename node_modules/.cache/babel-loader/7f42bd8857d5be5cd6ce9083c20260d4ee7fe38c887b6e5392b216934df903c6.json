{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalPrice: 0,\n  items: getCartFromLS()\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.count + sum;\n      }, 0);\n    },\n    minusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload);\n      if (findItem) {\n        findItem.count--;\n      }\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = [];\n    }\n  }\n});\nexport const {\n  addItem,\n  removeItem,\n  minusItem,\n  clearItems\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","totalPrice","items","getCartFromLS","cartSlice","name","reducers","addItem","state","action","findItem","find","obj","id","payload","count","push","reduce","sum","price","minusItem","removeItem","filter","clearItems","actions","reducer"],"sources":["/Users/nikitakraynov/Desktop/projects/pizza/src/redux/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  totalPrice: 0,\n  items: getCartFromLS(),\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const findItem = state.items.find((obj) => obj.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1,\n        });\n      }\n\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.count + sum;\n      }, 0);\n    },\n\n    minusItem(state, action) {\n      const findItem = state.items.find((obj) => obj.id === action.payload);\n      if (findItem) {\n        findItem.count--;\n      }\n    },\n\n    removeItem(state, action) {\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\n    },\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = [];\n    },\n  },\n});\n\nexport const { addItem, removeItem, minusItem, clearItems } = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAEC,aAAa;AACtB,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,QAAQ,GAAGF,KAAK,CAACN,KAAK,CAACS,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACxE,IAAIH,QAAQ,EAAE;QACZA,QAAQ,CAACK,KAAK,EAAE;MAClB,CAAC,MAAM;QACLP,KAAK,CAACN,KAAK,CAACc,IAAI,CAAC;UACf,GAAGP,MAAM,CAACK,OAAO;UACjBC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;MAEAP,KAAK,CAACP,UAAU,GAAGO,KAAK,CAACN,KAAK,CAACe,MAAM,CAAC,CAACC,GAAG,EAAEN,GAAG,KAAK;QAClD,OAAOA,GAAG,CAACO,KAAK,GAAGP,GAAG,CAACG,KAAK,GAAGG,GAAG;MACpC,CAAC,EAAE,CAAC,CAAC;IACP,CAAC;IAEDE,SAAS,CAACZ,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMC,QAAQ,GAAGF,KAAK,CAACN,KAAK,CAACS,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;MACrE,IAAIJ,QAAQ,EAAE;QACZA,QAAQ,CAACK,KAAK,EAAE;MAClB;IACF,CAAC;IAEDM,UAAU,CAACb,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACoB,MAAM,CAAEV,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;IACtE,CAAC;IACDS,UAAU,CAACf,KAAK,EAAE;MAChBA,KAAK,CAACN,KAAK,GAAG,EAAE;MAChBM,KAAK,CAACP,UAAU,GAAG,EAAE;IACvB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEM,OAAO;EAAEc,UAAU;EAAED,SAAS;EAAEG;AAAW,CAAC,GAAGnB,SAAS,CAACoB,OAAO;AAC/E,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}